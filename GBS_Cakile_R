#GBS Cakile R script
#updated 23_9_20
library(pophelper) 
library(gridExtra)
library(ggplot2)
library(maps) 
library(plotrix)
library(mapplots) 
library(SNPRelate)
library(tidyverse)
library(car)
library(HIest)
library(ggpubr) 
library(diveRsity

############################################################################################################
#****************************************************************************#
#****global thinned dataset, unsupervised run******#
#****************************************************************************#
#Admixture
#CV error for best K
CV_world_unsuper <- read.csv("CV_worlwide_run2.csv",header=TRUE)

pdf("CV_error_world_supervised.pdf",useDingbats=FALSE)
plot(CV_world_unsuper)
dev.off()
#K8 as optimal K
##visulaization with Pophelper and pie charts for k=8
#Barplot
#first Barplot
mcfiles <- readQ("GBSCAK_9_3_20_noUN_nohet_1000_noL.8.Q", filetype = "auto")
mclist <- mcfiles
Cluster_world_SE <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)
head(Cluster_world_SE)
sapply(Cluster_world_SE, is.character)
fn1 <- function(x) attr(x,"k")
spnames <- paste0("K=",sapply(mclist,fn1))

plotQ(mclist[1],returnplot=TRUE,exportplot=T,quiet=T, basesize=11,showsp=T,splab=spnames[1],
      clustercol=c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"), showlegend=F, showyaxis=F,showticks=F, sortind = "all",
      grplab = Cluster_world_SE,selgrp="Range",ordergrp=TRUE,indlabwithgrplab=T,grplabangle=-90,
      grplabsize = 1, splabsize = 3.5,barbordercolour = "black",barbordersize = 0.01,
      grplabpos= 0,grplabjust=0.7,imgtype = "pdf")

#Piecharts for populations
WorlPopk8_unsuper <- read.csv("worldwideK8_Poppie.csv",header=TRUE)

pdf("world_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,65)) #world
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=2, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#eNA
pdf("easternNorthAmerica_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-100, -47), ylim = c(40, 52))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.8, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#wNA
pdf("westernNorthAmerica_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.8, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#EU
pdf("EU_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(-20, 45),ylim = c(27, 58))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=1.25, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#Australia mainland and New Zealand
pdf("AUstraliamain_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(110, 180), ylim = c(-46.5, -26) )
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=1, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#Australia-Tasmania
pdf("TAS_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40.7))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.15, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()


#PCA
#Set up file names
vcf_PCA_8_9 <-c("GBSCAK_9_3_20_noUN_nohet_1000_noL.recode.vcf")
gds_PCA_8_9 <- c("GBSCAK_9_3_20_noUN_nohet_1000_noL.snps.gds")

#Convert your vcf to gds for use with snprelate
snpgdsVCF2GDS(vcf_PCA_8_9, gds_PCA_8_9,  method="biallelic.only",ignore.chr.prefix="Chr")
#Load the gds file
genofile <- snpgdsOpen(gds_PCA_8_9)
#Run the PCA
pca <- snpgdsPCA(genofile, num.thread = 2, eigen.cnt = 16, snp.id = NULL,autosome.only = F)
#Lets take a look at the percent variance explained
pc.percent <- pca$varprop*100
head(round(pc.percent, 2))
# 33.17  6.12  4.54  1.64  1.31  1.19
#Make a dataframe of your PCA results
tab <- data.frame(name = pca$sample.id,
                  EV1 = pca$eigenvect[,1],    # the first eigenvector
                  EV2 = pca$eigenvect[,2],    # the second eigenvector
                stringsAsFactors = FALSE)
#colour like SE cutt of for hybrids
popinfo <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)
PCA_8_9 <- cbind(popinfo,tab)
head(PCA_8_9)

pdf("PCA_admixtureSE.pdf",useDingbats=FALSE)
ggplot(PCA_8_9) +
  geom_point(aes(x=EV1 , y=EV2, color=factor(Species)), size=5, shape=20) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(Species)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "fill") +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("Species_Admixture_SE"),fill=guide_legend("Species_Admixture_SE")) +
  scale_y_continuous(name="EV2 6.12 %", limits=c(-0.23,0.28)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

pdf("PCA_Range.pdf",useDingbats=FALSE)
ggplot(PCA_14_4) +
  geom_point(aes(x=EV1, y=EV2, color=factor(Range)), size=5, shape=20) +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(Range)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
   theme(panel.border = element_rect(fill = NA, colour = "grey50")) + theme(legend.position = "none")+
  scale_y_continuous(name=" EV2 6.12 % ", limits=c(-0.23,0.21)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

pdf("PCA_NewHybrid.pdf",useDingbats=FALSE)
ggplot(PCA_14_4) +
  geom_point(aes(x=EV1, y=EV2, color=factor(NewHybrids)), size=5, shape=20) +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(NewHybrids)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) + theme(legend.position = "none")+
  scale_y_continuous(name="EV2 6.12 %", limits=c(-0.23,0.21)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

#multi K plot 2-10
#make a folder with only the Q files to use
afiles <- list.files(("multiK/"), full.names=T)
alist <- readQ(afiles)
popinfo <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)

fn1 <- function(x) attr(x,"k")
spnames <- paste0("K=",sapply(alist1,fn1))
p1 <- plotQ(alignK(alist[c(1,2,3,4,5,6,7,8,9)]),imgoutput="join",returnplot=T,exportplot=F,quiet=T,
            basesize=11,grplab = popinfo,selgrp="Range",ordergrp=TRUE,
            grplabsize = 3, splabsize = 9,barbordercolour = "black",barbordersize = 0.01,
            height=0.08,sortind = "all",sharedindlab=FALSE,splab=spnames[1:5]
)

pdf("multiK_worldwide_admixture.pdf",useDingbats=FALSE)
grid.arrange(p1$plot[[1]])
dev.off()

############################################################################################################
#*********************************************#
#*******************Newhybrids****************#
#*********************************************#
#change working directory
####choose 300 fixed differences by random
####Allfixeddiff <- read.table("484_fixed_10_3_20")
####random_SNP <- sample_n(Allfixeddiff ,300)
####write.table(random_SNP, "random_SNP_10_3_29.txt", append = FALSE, sep = "\t", dec = ".",
            row.names = FALSE, col.names = FALSE, quote = FALSE)

#use the 63 SNPs from HIest
#filter vcf file so that only those SNPs are left
#run Newhybrids outside of R in terminal


############################################################################################################
#*********************************************#
#****HIest************************************#
#*********************************************#
#change working directory
#data preperation on cluster using vcftools, keep only fixed differences between species from native ranges(471 SNPs)
#and prepare dataset for fixed differences between pure species identified by Admixture (63 SNPs)
vcftools --vcf GBSCAK_9_3_20_noUN_nohet_noL.recode.vcf \
--positions filter_10_3_20.txt \
--012 \
--out GBSfixed17_4_20

#substitute missing data from -1 to NA
sed 's/-1/NA/g' GBSfixed17_4_20.012 > GBSfixed17_4_20.012NA

#prepare parental frequency .csv with 0.99 and 0.03 for 471 SNPs, and 0.99 and 0.06 for 471 SNPs, and 1 and 0 for 63 SNPs, run below three times for each dataset once
load genotype data
gcak<-read.csv("geno_fixed_diff.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )
#load frequency data
pcak<-read.csv("freq_fixed_diff.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )

HI <- HIest(gcak,pcak,type="allele.count", iterations=99,surf=TRUE,startgrid=20)
HI.class <- HIclass(gcak,pcak,type="allele.count")

# compare classification with maximum likelihood estimates
Cak.test <- HItest(HI.class,HI, thresholds = c(2,2))

table(Cak.test$c1)
table(Cak.test$c2)
cakmerged_9_9_20 <- data.frame(name = gcak$sample,
                        H = HI$H, 
                        S = HI$S, 
                        logLik = HI$logLik,  
                        class100 = HI.class$class100,  
                        class010 = HI.class$class010, 
                        class121 = HI.class$class121, 
                        class110 = HI.class$class110, 
                        class011 = HI.class$class011,  
                        class001 = HI.class$class001,  
                        BestClass = HI.class$B,  
                        ClassLLD = HI.class$LLD,
                        LL.Class = Cak.test$LLD.class,
                        LL.max = Cak.test$LL.max,
                        dAIC = Cak.test$dAIC,
                        c1test = Cak.test$c1,
                        c2test = Cak.test$c2,
                        stringsAsFactors = FALSE)
write.csv(cakmerged_9_9_20, file = "HIest9_9_20.csv", append = FALSE, quote = TRUE, sep = " ",
          eol = "\n", na = "NA", dec = ".", row.names = TRUE,
          col.names = TRUE, qmethod = c("escape", "double"),
          fileEncoding = "")

#plot Hiest, triangle and maps, plot 63 SNPs
#make csv files with only wNA and only AUS
#trianlge
AUS_Triangle <- read.csv("Hiest_AUS_9_9.csv", header=TRUE)
wNA_Triangle <- read.csv("HIest_wNA_9_9.csv", header=TRUE)
head(AUS_Triangle)

pdf("Triangle_AUS.pdf",useDingbats=FALSE)
ggplot(AUS_Triangle) +
  geom_point(aes(x=S, y=H, color=factor(NewHiest9_9)), size=5, shape=20) +
  scale_color_manual(values = c('#FF9900','#0099CC','#FFFF33','#FF00CC','#0000FF')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("NewHiest9_9"),fill=guide_legend("NewHiest9_9"))+
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))
dev.off()

pdf("Triangle_AUS_nolegend.pdf",useDingbats=FALSE)
ggplot(AUS_Triangle) + 
  geom_point(aes(x=S, y=H, color=factor(NewHiest9_9)), size=5, shape=20) +
  scale_color_manual(values = c('#FF9900','#0099CC','#FFFF33','#FF00CC','#0000FF')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  theme(legend.position = "none") +
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))
dev.off()


pdf("Triangle_wNA.pdf",useDingbats=FALSE)
ggplot(wNA_Triangle) +
  geom_point(aes(x=S, y=H, color=factor(NewHiest9_9)), size=5, shape=20) +
  scale_color_manual(values = c('#CCFF00','#0099CC','#00FF00','#FF00CC','#0000FF')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("NewHiest9_9"),fill=guide_legend("NewHiest9_9"))+
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))
dev.off()

pdf("Triangle_wNA_nolegend.pdf",useDingbats=FALSE)
ggplot(wNA_Triangle) + 
  geom_point(aes(x=S, y=H, color=factor(NewHiest9_9)), size=5, shape=20) +
  scale_color_manual(values = c('#FF9900','#0099CC','#FFFF33','#FF00CC','#0000FF')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  theme(legend.position = "none") +
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))
dev.off()


#plot world
world_Triangle <- read.csv("Hiest_world9_9.csv", header=TRUE)
head(world_Triangle)
ggplot(world_Triangle) +
  geom_point(aes(x=S, y=H, color=factor(NewHiest9_9)), size=5, shape=20) +
  scale_color_manual(values = c('#FF9900','#0099CC','#FFFF33','#FF00CC','#0000FF')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("NewHiest9_9"),fill=guide_legend("NewHiest9_9"))+
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))

#maps for Hiest
pdf("Hiest_world.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,65)) #world
points(world_Triangle$Long , world_Triangle$Lat,
pch=21, col="black", bg=world_Triangle$NewHiest9_9, cex=0.9)
dev.off()

#per range next to each other
pdf("wNA_dotsnext.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(world_Triangle$Longplot_H, world_Triangle$Latplot_H,
       pch=21, col="black", bg=world_Triangle$NewHiest9_9, cex=1.5)
dev.off()

pdf("AUS_Main_dotsnext.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(112,165),ylim=c(-40,-25))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(world_Triangle$Longplot_H, world_Triangle$Latplot_H,
       pch=21, col="black", bg=world_Triangle$NewHiest9_9, cex=1.25)
dev.off()

pdf("TAS_dotsnext.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(world_Triangle$Longplot_H, world_Triangle$Latplot_H,
       pch=21, col="black", bg=world_Triangle$NewHiest9_9, cex=1.5)
dev.off()

###################################################################################
#*******************************************************************************#
#*Spearmans correlation test*#
#*******************************************************************************#

#change working directory
#rank of sampling locations, Admixture supervised run Q values per population (global thinned dataset) and S values per population as input (Hiest)

#Spearman test
AUS_MHE_noLHI<-read.csv("AUS_MHE_SE_wihtoutLHI.csv",header=TRUE)
AUS_MH_noLHI<-read.csv("AUS_MH_SE_withoutLHI.csv",header=TRUE)
AUS_H_admix_noLHI<-read.csv("AUS_H_ADMIX_SE_wihtoutLHI.csv",header=TRUE)
AUS_H_Hiest_noLHI<-read.csv("AUS_H_HIEST_SE_withoutLHI.csv",header=TRUE)

wNA_MHE_all<-read.csv("wNA_MHE_SE.csv",header=TRUE)
wNA_MHE_North<-read.csv("wNA_MHE_SE_North.csv",header=TRUE)
wNA_MH_all<-read.csv("wNA_MH_SE.csv",header=TRUE)
wNA_MH_North<-read.csv("wNA_MH_SE_North.csv",header=TRUE)
wNA_H_Admix<-read.csv("wNA_H_admix.csv",header=TRUE)
wNA_H_Hiest<-read.csv("wNA_H_HIEST.csv",header=TRUE)


cor.test(AUS_MHE_noLHI$k1_QE,AUS_MHE_noLHI$rank, method=c("spearman"))
cor.test(AUS_MHE_noLHI$S,AUS_MHE_noLHI$rank, method=c("spearman"))

cor.test(AUS_MH_noLHI$k1_QE,AUS_MH_noLHI$rank, method=c("spearman"))
cor.test(AUS_MH_noLHI$S,AUS_MH_noLHI$rank, method=c("spearman"))

cor.test(AUS_H_admix_noLHI$k1_QE,AUS_H_admix_noLHI$rank, method=c("spearman"))
cor.test(AUS_H_admix_noLHI$S,AUS_H_admix_noLHI$rank, method=c("spearman"))

cor.test(AUS_H_Hiest_noLHI$k1_QE,AUS_H_Hiest_noLHI$rank, method=c("spearman"))
cor.test(AUS_H_Hiest_noLHI$S,AUS_H_Hiest_noLHI$rank, method=c("spearman"))

cor.test(wNA_MHE_all$k1_QE,wNA_MHE_all$rank, method=c("spearman"))
cor.test(wNA_MHE_all$S,wNA_MHE_all$rank, method=c("spearman"))

cor.test(wNA_MHE_North$k1_QE,wNA_MHE_North$rank, method=c("spearman"))
cor.test(wNA_MHE_North$S,wNA_MHE_North$rank, method=c("spearman"))

cor.test(wNA_MH_all$k1_QE,wNA_MH_all$rank, method=c("spearman"))
cor.test(wNA_MH_all$S,wNA_MH_all$rank, method=c("spearman"))

cor.test(wNA_MH_North$k1_QE,wNA_MH_North$rank, method=c("spearman"))
cor.test(wNA_MH_North$S,wNA_MH_North$rank, method=c("spearman"))

cor.test(wNA_H_Admix$k1_QE,wNA_H_Admix$rank, method=c("spearman"))
cor.test(wNA_H_Admix$S,wNA_H_Admix$rank, method=c("spearman"))

cor.test(wNA_H_Hiest$k1_QE,wNA_H_Hiest$rank_all, method=c("spearman"))
cor.test(wNA_H_Hiest$S,wNA_H_Hiest$rank_all, method=c("spearman"))

#make plots for AUstralia, Q value MHE, H-Admixture, S vlaue MHE and Admixture, wNA Q value MHE
MHE_AUS_limited_Q <- ggscatter(AUS_MHE_noLHI, x = "rank", y = "k1_QE", 
                             add = "reg.line", conf.int = TRUE, 
                             cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1.35),
                             xlab = "rank", ylab = "Q")
H_AUS_admixture_Q <- ggscatter(AUS_H_admix_noLHI, x = "rank", y = "k1_QE", 
                                     add = "reg.line", conf.int = TRUE, 
                                     cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1.35),
                                     xlab = "rank", ylab = "Q")

MHE_AUS_limited_S <- ggscatter(AUS_MHE_noLHI, x = "rank", y = "S", 
                               add = "reg.line", conf.int = TRUE, 
                               cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1.35),
                               xlab = "rank", ylab = "S")
H_AUS_admixture_S <- ggscatter(AUS_H_admix_noLHI, x = "rank", y = "S", 
                               add = "reg.line", conf.int = TRUE, 
                               cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1.35),
                               xlab = "rank", ylab = "S")

wNA_MHE_North_Q <- ggscatter(wNA_MHE_North, x = "rank", y = "k1_QE", 
                           add = "reg.line", conf.int = TRUE, 
                           cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1.35),
                           xlab = "rank", ylab = "Q")

pdf("Figure4_22_9_20.pdf",useDingbats=FALSE)
grid.arrange(MHE_AUS_limited_Q,H_AUS_admixture_Q,wNA_MHE_North_Q,MHE_AUS_limited_S,H_AUS_admixture_S, ncol=3)
dev.off()


#################################################################################
#*******************************************************************************#
#***************************Q vs S**********************************************#
#*******************************************************************************#
#make an excelsheet per Individual Q from k1_E admixture supervised and S from HIest 
QS <- read.csv("QvsS11_9_20.csv",header=TRUE)
head(QS)
library(ggplot2)

#plot and colour after classficaiton per program
pdf("QS_HIest_noL.pdf",useDingbats=FALSE)
Q2 <- ggplot(QS, aes(x=K1_E, y=S, color=NewHiest9_9)) + geom_point()+theme_classic()+ theme(legend.position="none")
dev.off()

pdf("QS_admixtureSE_noL.pdf",useDingbats=FALSE)
Q3 <- ggplot(QS, aes(x=K1_E, y=S, color=Species_SE_admixture)) + geom_point()+theme_classic()+ theme(legend.position="none")
dev.off()

pdf("QS_admixtureCI_noL.pdf",useDingbats=FALSE)
Q4 <- ggplot(QS, aes(x=K1_E, y=S, color=Species_admixture_CI)) + geom_point()+theme_classic()+ theme(legend.position="none")
dev.off()

pdf("QS_NewHybrids_noL.pdf",useDingbats=FALSE)
Q1 <-ggplot(QS, aes(x=K1_E, y=S, color=NewHybrids.Species)) + geom_point()+ theme_classic()+ theme(legend.position="none")
dev.off()

pdf("QS_all_noL.pdf",useDingbats=FALSE)
grid.arrange(Q1,Q2,Q3,Q4, ncol=2)
dev.off()

################################################################################
#alginer comparison with Admixture classification#
################################################################

unfiltered <- read.csv ("unfiltered_10_9_20.csv",header=TRUE,stringsAsFactors = FALSE)
filtered  <- read.csv ("filtered_10_9_20.csv",header=TRUE)

p1 <- ggplot(unfiltered, aes(x=Species_SE_admixture, y=BWAPercent,color=Species_SE_admixture)) +  ylab("BWA_unfiltered_missing %") +
  geom_boxplot() + ylim(0,100)+ theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p2 <- ggplot(unfiltered, aes(x=Species_SE_admixture, y=NextGenpercent,color=Species_SE_admixture)) +  ylab("Nextgen_unfiltered_missing %") +
  geom_boxplot() + ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p3 <- ggplot(filtered, aes(x=Species_SE_admixture, y=BWA_Percent,color=Species_SE_admixture)) +  ylab("BWA_filtered_missing %") +
  geom_boxplot()+ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p4 <- ggplot(filtered, aes(x=Species_SE_admixture, y=NextGen_percent,color=Species_SE_admixture)) +  ylab("Nextgen_filtered_missing %") +
  geom_boxplot()+ ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold'))+
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()
  
pdf("Alignerbias.pdf",useDingbats=FALSE)
grid.arrange(p1,p2,p3,p4, ncol=2)
dev.off()

#reads mapped/unmapped
mapped_unmapped_all <- read.csv("all_mapped_unmapped14_9_20.csv", header=TRUE,stringsAsFactors = FALSE)

p1 <- ggplot(mapped_unmapped_all, aes(x=Species_SE_admixture, y=percent_highmapped_totoalmapped,color=Species_SE_admixture)) +  ylab("%_highmapped_totoalmapped") +
  geom_boxplot() + ylim(0,100)+ theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

pdf("Read_mapped_unampped.pdf",useDingbats=FALSE)
grid.arrange(p1, ncol=1)
dev.off()

################################################################################################################
#sampling map#
################################################################################################################
sampling <- read.csv("sampling_map18_9_20.csv", header=TRUE)
#world
pdf("Sampling_world.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,75)) #world
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=0.9)
dev.off()

#wNA
pdf("Sampling_wNA.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.2)
dev.off()

#eNA
pdf("Sampling_eNA.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-100, -47), ylim = c(40, 52))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.2)
dev.off()

# EU
pdf("Sampling_EUwith Iceland.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(-24, 45),ylim = c(25, 75))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()

#Australia mainland and New Zealand
pdf("Sampling_Australiamian.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(110, 180), ylim = c(-46.5, -26)) 
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()

#Australia- Tasmania
pdf("Sampling_Tasi.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40.7))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()
#################################################################################
#*******************************************************************************#
#*************Population statistik on global thinned dataset********************#
#*******************************************************************************#
#use PGD spider to convert vcf file into Genpop file with the pooled groups as population 
#make sure that Genpop file has a title
#change working directory

basicStats(infile = "Genepop_SE_4_9_20.txt", 
           outfile = "basicStats_9_4_SE", fis_ci = F,
           ar_ci = TRUE, ar_boots = 1000,
           mc_reps = 9999, rarefaction = FALSE, ar_alpha = 0.05)

divBasic(infile = "Genepop_SE_4_9_20.txt", outfile = 'DivBasic_4_9_SE', gp = 3, bootstraps = 1000)
