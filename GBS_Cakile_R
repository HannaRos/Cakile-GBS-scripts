#GBS Cakile R script
#updated 23_9_20
library(pophelper) 
library(gridExtra)
library(ggplot2)
library(maps) 
library(plotrix)
library(mapplots) 
library(SNPRelate)
library(tidyverse)
library(car)
library(HIest)
library(ggpubr) 
library(diveRsity)

############################################################################################################
#****************************************************************************#
#****global thinned dataset, unsupervised run******#
#****************************************************************************#
#Admixture
#CV error for best K
CV_world_unsuper <- read.csv("CV_worlwide_run2.csv",header=TRUE)

pdf("CV_error_world_supervised.pdf",useDingbats=FALSE)
plot(CV_world_unsuper)
dev.off()
#K8 as optimal K
##visulaization with Pophelper and pie charts for k=8
#Barplot
#first Barplot
mcfiles <- readQ("GBSCAK_9_3_20_noUN_nohet_1000_noL.8.Q", filetype = "auto")
mclist <- mcfiles
Cluster_world_SE <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)
head(Cluster_world_SE)
sapply(Cluster_world_SE, is.character)
fn1 <- function(x) attr(x,"k")
spnames <- paste0("K=",sapply(mclist,fn1))

plotQ(mclist[1],returnplot=TRUE,exportplot=T,quiet=T, basesize=11,showsp=T,splab=spnames[1],
      clustercol=c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"), showlegend=F, showyaxis=F,showticks=F, sortind = "all",
      grplab = Cluster_world_SE,selgrp="Range",ordergrp=TRUE,indlabwithgrplab=T,grplabangle=-90,
      grplabsize = 1, splabsize = 3.5,barbordercolour = "black",barbordersize = 0.01,
      grplabpos= 0,grplabjust=0.7,imgtype = "pdf")

#Piecharts for populations
WorlPopk8_unsuper <- read.csv("worldwideK8_Poppie.csv",header=TRUE)

pdf("world_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,65)) #world
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=2, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#eNA
pdf("easternNorthAmerica_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-100, -47), ylim = c(40, 52))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.8, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#wNA
pdf("westernNorthAmerica_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.8, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#EU
pdf("EU_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(-20, 45),ylim = c(27, 58))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=1.25, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#Australia mainland and New Zealand
pdf("AUstraliamain_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(110, 180), ylim = c(-46.5, -26) )
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=1, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()

#Australia-Tasmania
pdf("TAS_admxiture7_9.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40.7))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(WorlPopk8_unsuper))){
  the_longitude <-WorlPopk8_unsuper[line,"Long"] 
  the_latitude <-WorlPopk8_unsuper[line,"Lat"]
  the_k1 <-WorlPopk8_unsuper[line,"k1"]
  the_k2 <-WorlPopk8_unsuper[line,"k2"]
  the_k3 <-WorlPopk8_unsuper[line,"k3"]
  the_k4 <-WorlPopk8_unsuper[line,"k4"]
  the_k5 <-WorlPopk8_unsuper[line,"k5"]
  the_k6 <-WorlPopk8_unsuper[line,"k6"]
  the_k7 <-WorlPopk8_unsuper[line,"k7"]
  the_k8 <-WorlPopk8_unsuper[line,"k8"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2,the_k3,the_k4,the_k5, the_k6,the_k7,the_k8), radius=0.15, col = c("#87afff","#005f00","#00af00","#0000d7","#00ffff","#00ff00","#dfff5f","#00afaf"))
}
dev.off()


#PCA
#Set up file names
vcf_PCA_8_9 <-c("GBSCAK_9_3_20_noUN_nohet_1000_noL.recode.vcf")
gds_PCA_8_9 <- c("GBSCAK_9_3_20_noUN_nohet_1000_noL.snps.gds")

#Convert your vcf to gds for use with snprelate
snpgdsVCF2GDS(vcf_PCA_8_9, gds_PCA_8_9,  method="biallelic.only",ignore.chr.prefix="Chr")
#Load the gds file
genofile <- snpgdsOpen(gds_PCA_8_9)
#Run the PCA
pca <- snpgdsPCA(genofile, num.thread = 2, eigen.cnt = 16, snp.id = NULL,autosome.only = F)
#Lets take a look at the percent variance explained
pc.percent <- pca$varprop*100
head(round(pc.percent, 2))
# 33.17  6.12  4.54  1.64  1.31  1.19
#Make a dataframe of your PCA results
tab <- data.frame(name = pca$sample.id,
                  EV1 = pca$eigenvect[,1],    # the first eigenvector
                  EV2 = pca$eigenvect[,2],    # the second eigenvector
                stringsAsFactors = FALSE)
#colour like SE cutt of for hybrids
popinfo <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)
PCA_8_9 <- cbind(popinfo,tab)
head(PCA_8_9)

pdf("PCA_admixtureSE.pdf",useDingbats=FALSE)
ggplot(PCA_8_9) +
  geom_point(aes(x=EV1 , y=EV2, color=factor(Species)), size=5, shape=20) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(Species)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "fill") +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("Species_Admixture_SE"),fill=guide_legend("Species_Admixture_SE")) +
  scale_y_continuous(name="EV2 6.12 %", limits=c(-0.23,0.28)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

pdf("PCA_Range.pdf",useDingbats=FALSE)
ggplot(PCA_14_4) +
  geom_point(aes(x=EV1, y=EV2, color=factor(Range)), size=5, shape=20) +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(Range)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
   theme(panel.border = element_rect(fill = NA, colour = "grey50")) + theme(legend.position = "none")+
  scale_y_continuous(name=" EV2 6.12 % ", limits=c(-0.23,0.21)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

pdf("PCA_NewHybrid.pdf",useDingbats=FALSE)
ggplot(PCA_14_4) +
  geom_point(aes(x=EV1, y=EV2, color=factor(NewHybrids)), size=5, shape=20) +
  stat_ellipse(aes(x=EV1,y=EV2,fill=factor(NewHybrids)),linetype=2,
               geom="polygon", level=0.95, alpha=0.2) + theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) + theme(legend.position = "none")+
  scale_y_continuous(name="EV2 6.12 %", limits=c(-0.23,0.21)) +
  scale_x_continuous(name="EV1 33.17 %", limits=c(-0.19,0.15))
dev.off()

#multi K plot 2-10
#make a folder with only the Q files to use
afiles <- list.files(("multiK/"), full.names=T)
alist <- readQ(afiles)
popinfo <- read.csv("disrupt_SE.csv",header=TRUE,stringsAsFactors = FALSE)

fn1 <- function(x) attr(x,"k")
spnames <- paste0("K=",sapply(alist1,fn1))
p1 <- plotQ(alignK(alist[c(1,2,3,4,5,6,7,8,9)]),imgoutput="join",returnplot=T,exportplot=F,quiet=T,
            basesize=11,grplab = popinfo,selgrp="Range",ordergrp=TRUE,
            grplabsize = 3, splabsize = 9,barbordercolour = "black",barbordersize = 0.01,
            height=0.08,sortind = "all",sharedindlab=FALSE,splab=spnames[1:5]
)

pdf("multiK_worldwide_admixture.pdf",useDingbats=FALSE)
grid.arrange(p1$plot[[1]])
dev.off()

############################################################################################################
#*********************************************#
#*******************Newhybrids****************#
#*********************************************#
#use the 63 SNPs which showed fixed differences between species with Admixture SE cut off
#filter vcf file for 63 SNPS, use PGDSpider to convert and add the z option z0 for eNA and z1 EU
#run Newhybrids outside of R in terminal and run 3 times
newhybs -d 63SNPS_newHybrid_29_9_20_z.txt --no-gui


############################################################################################################
#*********************************************#
#****HIest************************************#
#*********************************************#
#change working directory
#data preperation on cluster using vcftools, keep only fixed differences between species from native ranges(471 SNPs)
#and prepare dataset for fixed differences between pure species identified by Admixture (63 SNPs)
vcftools --vcf GBSCAK_9_3_20_noUN_nohet_noL.recode.vcf \
--positions filter_10_3_20.txt \
--012 \
--out GBSfixed17_4_20

#substitute missing data from -1 to NA
sed 's/-1/NA/g' GBSfixed17_4_20.012 > GBSfixed17_4_20.012NA

#prepare parental frequency .csv with 0.99 and 0.03 for 471 SNPs, and 0.99 and 0.06 for 471 SNPs, and 1 and 0 for 63 SNPs,for each dataset
load genotype data
gcak<-read.csv("geno_fixed_diff.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )
#load frequency data
pcak<-read.csv("freq_fixed_diff.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )

HI <- HIest(gcak,pcak,type="allele.count", iterations=99,surf=TRUE,startgrid=20)
HI.class <- HIclass(gcak,pcak,type="allele.count")

# compare classification with maximum likelihood estimates
Cak.test <- HItest(HI.class,HI, thresholds = c(2,1))

table(Cak.test$c1)
table(Cak.test$c2)
cakmerged_1_10_20_099_003 <- data.frame(name = gcak$sample,
                        H = HI$H, 
                        S = HI$S, 
                        logLik = HI$logLik,  
                        class100 = HI.class$class100,  
                        class010 = HI.class$class010, 
                        class121 = HI.class$class121, 
                        class110 = HI.class$class110, 
                        class011 = HI.class$class011,  
                        class001 = HI.class$class001,  
                        BestClass = HI.class$B,  
                        ClassLLD = HI.class$LLD,
                        LL.Class = Cak.test$LLD.class,
                        LL.max = Cak.test$LL.max,
                        dAIC = Cak.test$dAIC,
                        c1test = Cak.test$c1,
                        c2test = Cak.test$c2,
                        stringsAsFactors = FALSE)
write.csv(cakmerged_1_10_20_099_003, file = "HIest9_9_20.csv", append = FALSE, quote = TRUE, sep = " ",
          eol = "\n", na = "NA", dec = ".", row.names = TRUE,
          col.names = TRUE, qmethod = c("escape", "double"),
          fileEncoding = "")

#plot Hiest, triangle and maps, plot 471 SNPs
#make csv files with only wNA and only AUS
#trianlge
Triangel_wNA_14_10 <- read.csv("Triangle_wNA_14_10_20.csv", header=TRUE)
#Triangle wNA
pdf("Triangle_Hiest_14_10_20_noLegend_wNA.pdf",useDingbats=FALSE)
pwNA <- ggplot(Triangel_wNA_14_10) +
  geom_point(aes(x=S, y=H, color=factor(BestClasstoplot)), size=5, shape=20) +
  scale_color_manual(values = c('#F4E72F','#2B4B9B','#662483')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("BestClasstoplot"),fill=guide_legend("BestClasstoplot"))+
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))+ theme(legend.position = "none")
grid.arrange(pwNA)
dev.off()

Triangel_14_10_AUS <- read.csv("Triangle14_10_AUS.csv", header=TRUE)
#Triangle AUS
pdf("Triangle_Hiest_14_10_20_noLegend_AUS.pdf",useDingbats=FALSE)
pAUS <- ggplot(Triangel_14_10_AUS) +
  geom_point(aes(x=S, y=H, color=factor(BestClasstoplot)), size=5, shape=20) +
  scale_color_manual(values = c('#F4E72F','#2B4B9B','#662483')) +
  theme_classic() +
  theme(panel.border = element_rect(fill = NA, colour = "grey50")) +
  guides(color=guide_legend("BestClasstoplot"),fill=guide_legend("BestClasstoplot"))+
  scale_y_continuous(limits=c(0,1)) +
  scale_x_continuous(limits=c(0,1))+ theme(legend.position = "none")
grid.arrange(pAUS)
dev.off()



#maps for Hiest
Hiest471_099003 <- read.csv("Hiest_plot_triangle_map_471_099_003_14_10_20.csv", header=TRUE)
head(Hiest471_099003)
pdf("World_Hiest471_15_10_20.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,65)) #world
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(Hiest471_099003))){
  the_longitude <-Hiest471_099003[line,"Long"] 
  the_latitude <-Hiest471_099003[line,"Lat"]
  the_k1 <-Hiest471_099003[line,"Splot"]
  the_k2 <-Hiest471_099003[line,"X1.Splot"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2), radius=2.5, col = c("yellow","blue"))
}
dev.off()

pdf("AUstraliamain_Hiest471_15_10_20.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(112,165),ylim=c(-40,-25))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(Hiest471_099003))){
  the_longitude <-Hiest471_099003[line,"Longplot_H"] 
  the_latitude <-Hiest471_099003[line,"Latplot_H"]
  the_k1 <-Hiest471_099003[line,"Splot"]
  the_k2 <-Hiest471_099003[line,"X1.Splot"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2), radius=0.4, col = c("yellow","blue"))
}
dev.off()

pdf("TAS_Hiest471_15_10_20.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(Hiest471_099003))){
  the_longitude <-Hiest471_099003[line,"Longplot_H"] 
  the_latitude <-Hiest471_099003[line,"Latplot_H"]
  the_k1 <-Hiest471_099003[line,"Splot"]
  the_k2 <-Hiest471_099003[line,"X1.Splot"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2), radius=0.08, col = c("yellow","blue"))
}
dev.off()

pdf("westernNorthAmerica_Hiest471_15_10_20.pdf")
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
for (line in (1:nrow(Hiest471_099003))){
  the_longitude <-Hiest471_099003[line,"Longplot_H"] 
  the_latitude <-Hiest471_099003[line,"Latplot_H"]
  the_k1 <-Hiest471_099003[line,"Splot"]
  the_k2 <-Hiest471_099003[line,"X1.Splot"]
  floating.pie(the_longitude, the_latitude, x=c(the_k1,the_k2), radius=0.4, col = c("yellow","blue"))
}
dev.off()

#Hiest 471 SNPs 0.99/0.06
#for 471 with average allele frequ 
gcak<-read.csv("geno_fixed_diff_28_9_20-484-13.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )
#load frequency data
pcak<-read.csv("freq_fixed_diff_28_9_20_484-13_099_006.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )

HI_6 <- HIest(gcak,pcak,type="allele.count", iterations=99,surf=TRUE,startgrid=20)
HI.class_6 <- HIclass(gcak,pcak,type="allele.count")
Cak.test_6 <- HItest(HI.class_6,HI_6,thresholds=c(2,1))
table(Cak.test_6$Best.class,Cak.test_6$c2)

cakmerged_1_10_20_471_099_006 <- data.frame(name = gcak$sample,
                                          H = HI_6$H, 
                                          S = HI_6$S, 
                                          logLik = HI_6$logLik,  
                                          class100 = HI.class_6$class100,  
                                          class010 = HI.class_6$class010, 
                                          class121 = HI.class_6$class121, 
                                          class110 = HI.class_6$class110, 
                                          class011 = HI.class_6$class011,  
                                          class001 = HI.class_6$class001,  
                                          BestClass = HI.class_6$B,  
                                          ClassLLD = HI.class_6$LLD,
                                          LL.Class = Cak.test_6$LLD.class,
                                          LL.max = Cak.test_6$LL.max,
                                          dAIC = Cak.test_6$dAIC,
                                          c1test = Cak.test_6$c1,
                                          c2test = Cak.test_6$c2,
                                          stringsAsFactors = FALSE)
write.csv(cakmerged_1_10_20_471_099_006, file = "HIest29_9_20_471_099_006.csv", append = FALSE, quote = TRUE, sep = " ",
          eol = "\n", na = "NA", dec = ".", row.names = TRUE,
          col.names = TRUE, qmethod = c("escape", "double"),
          fileEncoding = "")
          
#Hiest 63 SNPs 1/0
gcak<-read.csv("geno_fixed_world63_28_9_20.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )
#load frequency data
pcak<-read.csv("freq_fixed_diff_63_28_9_20_1_0.csv", 
               stringsAsFactors = FALSE, strip.white = TRUE, na.strings = c("NA","") )

HI_3 <- HIest(gcak,pcak,type="allele.count", iterations=99,surf=TRUE,startgrid=20)
HI.class_3 <- HIclass(gcak,pcak,type="allele.count")
Cak.test_3 <- HItest(HI.class_3,HI_3,thresholds=c(2,1))
table(Cak.test_3$Best.class,Cak.test_3$c2)

cakmerged_1_10_20_63_1_0 <- data.frame(name = gcak$sample,
                                    H = HI_3$H, 
                                    S = HI_3$S, 
                                    logLik = HI_3$logLik,  
                                    class100 = HI.class_3$class100,  
                                    class010 = HI.class_3$class010, 
                                    class121 = HI.class_3$class121, 
                                    class110 = HI.class_3$class110, 
                                    class011 = HI.class_3$class011,  
                                    class001 = HI.class_3$class001,  
                                    BestClass = HI.class_3$B,  
                                    ClassLLD = HI.class_3$LLD,
                                    LL.Class = Cak.test_3$LLD.class,
                                    LL.max = Cak.test_3$LL.max,
                                    dAIC = Cak.test_3$dAIC,
                                    c1test = Cak.test_3$c1,
                                    c2test = Cak.test_3$c2,
                                    stringsAsFactors = FALSE)
write.csv(cakmerged_1_10_20_63_1_0, file = "HIest1_10_20_63_1_0.csv", append = FALSE, quote = TRUE, sep = " ",
          eol = "\n", na = "NA", dec = ".", row.names = TRUE,
          col.names = TRUE, qmethod = c("escape", "double"),
          fileEncoding = "")

###################################################################################
#*******************************************************************************#
#*Spearmans correlation test*#
#*******************************************************************************#
#change working directory
#rank of sampling locations, Admixture supervised run Q values per population (global thinned dataset) and S values per population as input (Hiest)

#Spearman test
#Q Admixture
AUS_MHE_noLHI<-read.csv("AUS_MHE_SE_wihtoutLHI.csv",header=TRUE)
AUS_MH_noLHI<-read.csv("AUS_MH_SE_withoutLHI.csv",header=TRUE)
AUS_H_admix_noLHI<-read.csv("AUS_H_ADMIX_SE_wihtoutLHI.csv",header=TRUE)
wNA_MHE_all<-read.csv("wNA_MHE_SE.csv",header=TRUE)
wNA_MHE_North<-read.csv("wNA_MHE_SE_North.csv",header=TRUE)
wNA_MH_all<-read.csv("wNA_MH_SE.csv",header=TRUE)
wNA_MH_North<-read.csv("wNA_MH_SE_North.csv",header=TRUE)
wNA_H_Admix<-read.csv("wNA_H_admix.csv",header=TRUE)

#S-HIest
MHE_AUS_471_63<- read.csv("MHE_AUS_471_63_S.csv", header=TRUE)
MHE_wNA_471_63<- read.csv("MHE_wNA_471_63_S.csv", header=TRUE)
MHE_wNA_471_63_North <- read.csv("MHE_wNA_NORTH_471_63_S.csv", header=TRUE)
MH_AUS_471<- read.csv("MH_AUS_471_S.csv", header=TRUE)
MH_wNA_471<- read.csv("MH_wNA_471_S.csv", header=TRUE)
MH_wNA_471_North <- read.csv("MH_wNA_NORTH_471.csv", header=TRUE)
H_AUS_471<- read.csv("H_AUS_471_S.csv", header=TRUE)
H_wNA_471<- read.csv("H_wNA_471_S.csv", header=TRUE)
H_wNA_471_North<- read.csv("H_wNA_NORTH_471_S.csv", header=TRUE)
MH_AUS_63<- read.csv("MH_AUS_63_S.csv", header=TRUE)
MH_wNA_63<- read.csv("MH_wNA_63_S.csv", header=TRUE)
MH_wNA_63_North<- read.csv("MH_wNA_NORTH_63_S.csv", header=TRUE)
H_AUS_63<- read.csv("H_AUS_63_S.csv", header=TRUE)
H_wNA_63<- read.csv("H_wNA_63_S.csv", header=TRUE)
H_wNA_63_North<- read.csv("H_wNA_NORTH_63_S.csv", header=TRUE)

#S corrrelation
cor.test(MHE_AUS_471_63$X471_S,MHE_AUS_471_63$rank, method=c("spearman"))
cor.test(MHE_AUS_471_63$X63_S,MHE_AUS_471_63$rank, method=c("spearman"))
cor.test(MHE_wNA_471_63$X471_S,MHE_wNA_471_63$rank, method=c("spearman"))
cor.test(MHE_wNA_471_63$X63_S,MHE_wNA_471_63$rank, method=c("spearman"))
cor.test(MHE_wNA_471_63_North$X471_S,MHE_wNA_471_63_North$rank, method=c("spearman"))
cor.test(MHE_wNA_471_63_North$X63_S,MHE_wNA_471_63_North$rank, method=c("spearman"))
cor.test(MH_AUS_471$X471_S,MH_AUS_471$rank, method=c("spearman"))
cor.test(MH_wNA_471$X471_S,MH_wNA_471$rank, method=c("spearman"))
cor.test(MH_wNA_471_North$X471_S,MH_wNA_471_North$rank, method=c("spearman"))
cor.test(H_AUS_471$X471_S,H_AUS_471$rank, method=c("spearman"))
cor.test(H_wNA_471$X471_S,H_wNA_471$rank, method=c("spearman"))
cor.test(H_wNA_471_North$X471_S,H_wNA_471_North$rank, method=c("spearman"))
cor.test(MH_AUS_63$X63_S,MH_AUS_63$rank, method=c("spearman"))
cor.test(MH_wNA_63$X63_S,MH_wNA_63$rank, method=c("spearman"))
cor.test(MH_wNA_63_North$X63_S,MH_wNA_63_North$rank, method=c("spearman"))
cor.test(H_AUS_63$X63_S,H_AUS_63$rank, method=c("spearman"))
cor.test(H_wNA_63$X63_S,H_wNA_63$rank, method=c("spearman"))
cor.test(H_wNA_63_North$X63_S,H_wNA_63_North$rank, method=c("spearman"))

#Q correlation
cor.test(AUS_MHE_noLHI$k1_QE,AUS_MHE_noLHI$rank, method=c("spearman"))
cor.test(AUS_MH_noLHI$k1_QE,AUS_MH_noLHI$rank, method=c("spearman"))
cor.test(AUS_H_admix_noLHI$k1_QE,AUS_H_admix_noLHI$rank, method=c("spearman"))
cor.test(AUS_H_Hiest_noLHI$k1_QE,AUS_H_Hiest_noLHI$rank, method=c("spearman"))
cor.test(wNA_MHE_all$k1_QE,wNA_MHE_all$rank, method=c("spearman"))
cor.test(wNA_MHE_North$k1_QE,wNA_MHE_North$rank, method=c("spearman"))
cor.test(wNA_MH_all$k1_QE,wNA_MH_all$rank, method=c("spearman"))
cor.test(wNA_MH_North$k1_QE,wNA_MH_North$rank, method=c("spearman"))
cor.test(wNA_H_Admix$k1_QE,wNA_H_Admix$rank, method=c("spearman"))
cor.test(wNA_H_Hiest$k1_QE,wNA_H_Hiest$rank_all, method=c("spearman"))


#plots for Hybrids, 471 SNPs 0.99/0.03
H_AUS_Admixture_SE_Hybrid<- ggscatter(AUS_H_admix_noLHI, x = "rank", y = "k1_QE", 
                                      add = "reg.line", conf.int = TRUE, 
                                      cor.coef = TRUE, cor.method = "spearman",xlim=c(0,7), ylim=c(0,0.6),
                                      xlab = "rank", ylab = "S")
MH_H_AUS_Hiest_471_099_003<- ggscatter(MH_AUS_471, x = "rank", y = "X471_S", 
                                       add = "reg.line", conf.int = TRUE, 
                                       cor.coef = TRUE, cor.method = "spearman",xlim=c(0,10), ylim=c(0,1),
                                       xlab = "rank", ylab = "S")

H_wNA_Admixture_SE_Hybrid <- ggscatter(wNA_H_Admix, x = "rank", y = "k1_QE", 
                                      add = "reg.line", conf.int = TRUE, 
                                      cor.coef = TRUE, cor.method = "spearman",xlim=c(0,7), ylim=c(0,0.6),
                                      xlab = "rank", ylab = "S")

H_wNA_471HIest_SE_Hybrid <- ggscatter(H_wNA_471, x = "rank", y = "X471_S",
                                      add = "reg.line", conf.int = TRUE, cor.coef = TRUE, 
                                      cor.method = "spearman",xlim=c(0,10), ylim=c(0,1),
                                      xlab = "rank", ylab = "S")

pdf("Spearman_27_10_20_Q_hybrids.pdf")
a <- H_AUS_Admixture_SE_Hybrid + scale_x_continuous(breaks=c(0,2,4,6,8,10))
b <- H_wNA_Admixture_SE_Hybrid + scale_x_continuous(breaks=c(0,2,4,6,8,10))
grid.arrange(a,b,ncol=2)
dev.off()

pdf("Spearman_27_10_20_S_hybrids.pdf")
c <- MH_H_AUS_Hiest_471_099_003 + scale_x_continuous(breaks=c(0,2,4,6,8,10))
d <- H_wNA_471HIest_SE_Hybrid + scale_x_continuous(breaks=c(0,2,4,6,8,10))
grid.arrange(c,d,ncol=2)
dev.off()
###################################################################################
#*******************************************************************************#
#*NewHybrid plotting*#
#*******************************************************************************#
#plot NewHybrids on map 63 SNPs
NewHybrid <-read.csv("NewHybrids_63_29_9_20_plot.csv", header=TRUE)
head(NewHybrid)
pdf("NewHybrids_dotsNext_wNA.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(NewHybrid$Latplot_H, NewHybrid$Longplot_H,
       pch=21, col="black", bg=NewHybrid$NewHybrids_63SNP, cex=1.5)
dev.off()

#per range next to each other
pdf("NewHybrid_wNA_dotsnext_t.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(NewHybrid$Longplot_H, NewHybrid$Latplot_H,
       pch=21, col="black", bg=NewHybrid$NewHybrids_63SNP, cex=1.25)
dev.off()

pdf("NewHybrid_AUS_Main_dotsnext.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(112,165),ylim=c(-40,-25))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(NewHybrid$Longplot_H, NewHybrid$Latplot_H,
       pch=21, col="black", bg=NewHybrid$NewHybrids_63SNP, cex=1.25)
dev.off()

pdf("NewHybrid_TAS_dotsnext.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(NewHybrid$Longplot_H, NewHybrid$Latplot_H,
       pch=21, col="black", bg=NewHybrid$NewHybrids_63SNP, cex=1.5)
dev.off()

#################################################################################
#*******************************************************************************#
#***************************Q vs S**********************************************#
#*******************************************************************************#
#make an excelsheet per Individual Q from k1_E admixture supervised and S from HIest 
QvsS_15_10_20<- read.csv ("QvsS_471_15_10_20.csv", header=TRUE)
head(QS)
library(ggplot2)

#plot and colour after classficaiton per program

Q1 <-ggplot(QvsS_15_10_20, aes(x=K1_E, y=S471, color=NewHybrids_63SNP)) + geom_point()+ theme_classic()+ theme(legend.position="none")

Q2 <- ggplot(QvsS_15_10_20, aes(x=K1_E, y=S471, color=BestClasstoplot)) + geom_point()+theme_classic()+ theme(legend.position="none")

Q3 <- ggplot(QvsS_15_10_20, aes(x=K1_E, y=S471, color=Species_SE_admixture)) + geom_point()+theme_classic()+ theme(legend.position="none")

pdf("QS_all__15oct2020_noLegend.pdf",useDingbats=FALSE)
grid.arrange(Q1,Q2,Q3,Q4, ncol=2)
dev.off()

################################################################################
#alginer comparison with Admixture classification#
################################################################

unfiltered <- read.csv ("unfiltered_10_9_20.csv",header=TRUE,stringsAsFactors = FALSE)
filtered  <- read.csv ("filtered_10_9_20.csv",header=TRUE)

p1 <- ggplot(unfiltered, aes(x=Species_SE_admixture, y=BWAPercent,color=Species_SE_admixture)) +  ylab("BWA_unfiltered_missing %") +
  geom_boxplot() + ylim(0,100)+ theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p2 <- ggplot(unfiltered, aes(x=Species_SE_admixture, y=NextGenpercent,color=Species_SE_admixture)) +  ylab("Nextgen_unfiltered_missing %") +
  geom_boxplot() + ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p3 <- ggplot(filtered, aes(x=Species_SE_admixture, y=BWA_Percent,color=Species_SE_admixture)) +  ylab("BWA_filtered_missing %") +
  geom_boxplot()+ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

p4 <- ggplot(filtered, aes(x=Species_SE_admixture, y=NextGen_percent,color=Species_SE_admixture)) +  ylab("Nextgen_filtered_missing %") +
  geom_boxplot()+ ylim(0,100) + theme(plot.title = element_text(hjust = 0.5,size=12, face='bold'))+
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()
  
pdf("Alignerbias.pdf",useDingbats=FALSE)
grid.arrange(p1,p2,p3,p4, ncol=2)
dev.off()

#reads mapped/unmapped
mapped_unmapped_all <- read.csv("all_mapped_unmapped14_9_20.csv", header=TRUE,stringsAsFactors = FALSE)

p1 <- ggplot(mapped_unmapped_all, aes(x=Species_SE_admixture, y=percent_highmapped_totoalmapped,color=Species_SE_admixture)) +  ylab("%_highmapped_totoalmapped") +
  geom_boxplot() + ylim(0,100)+ theme(plot.title = element_text(hjust = 0.5,size=12, face='bold')) +
  scale_color_manual(values = c("#66FF00","#CC00CC","#3333FF"),aesthetics = "colour") +theme_classic()

pdf("Read_mapped_unampped.pdf",useDingbats=FALSE)
grid.arrange(p1, ncol=1)
dev.off()

################################################################################################################
#sampling map#
################################################################################################################
sampling <- read.csv("sampling_map18_9_20.csv", header=TRUE)
#world
pdf("Sampling_world.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4), xlim=c(-155,180), ylim=c(-46,75)) #world
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=0.9)
dev.off()

#wNA
pdf("Sampling_wNA.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-158,-114),ylim=c(31,61))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.2)
dev.off()

#eNA
pdf("Sampling_eNA.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(-100, -47), ylim = c(40, 52))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.2)
dev.off()

# EU
pdf("Sampling_EUwith Iceland.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(-24, 45),ylim = c(25, 75))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()

#Australia mainland and New Zealand
pdf("Sampling_Australiamian.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim = c(110, 180), ylim = c(-46.5, -26)) 
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()

#Australia- Tasmania
pdf("Sampling_Tasi.pdf",useDingbats=FALSE)
map('mapdata::worldLores', fill = TRUE, col = "white", mar = rep(2, 4),xlim=c(142,149),ylim=c(-44,-40.7))
map.scale(metric=TRUE,ratio=FALSE) #for km
points(sampling$Long , sampling$Lat,
       pch=21, col="orange",bg="orange", cex=1.3)
dev.off()
#################################################################################
#*******************************************************************************#
#*************Population statistik on global thinned dataset********************#
#*******************************************************************************#
#use PGD spider to convert vcf file into Genpop file with the pooled groups as population 
#make sure that Genpop file has a title
#change working directory

basicStats(infile = "Genepop_SE_4_9_20.txt", 
           outfile = "basicStats_9_4_SE", fis_ci = F,
           ar_ci = TRUE, ar_boots = 1000,
           mc_reps = 9999, rarefaction = FALSE, ar_alpha = 0.05)
################################################################################
#Treemix#
################################################################
##convert vcf to treemix with python script e.g.:
#Individuals grouped after phenotype and origin
#run python on cluster
python vcf2treemix.py -vcf AUS_Home_30_9_20.recode.vcf -pop Popfile_AUS_M_split 
python vcf2treemix.py -vcf wNA_Home_30_9_20.recode.vcf -pop Popfile_wNA_M_split

#run Treemix maximum likelihood trees
#run Treemix on terminal
treemix -i AUS_Home_30_9_20_M_split.tmix.gz -o AUS_Home_30_9_20_M_split_m0 
treemix -i AUS_Home_30_9_20_M_split.tmix.gz -o AUS_Home_30_9_20_M_split_m1 -m 1
treemix -i AUS_Home_30_9_20_M_split.tmix.gz -o AUS_Home_30_9_20_M_split_m2 -m 2
treemix -i AUS_Home_30_9_20_M_split.tmix.gz -o AUS_Home_30_9_20_M_split_m3 -m 3
treemix -i AUS_Home_30_9_20_M_split.tmix.gz -o AUS_Home_30_9_20_M_split_m4 -m 4

treemix -i wNA_Home_30_9_20_M_split.tmix.gz -o wNA_Home_30_9_20_M_split_m0 
treemix -i wNA_Home_30_9_20_M_split.tmix.gz -o wNA_Home_30_9_20_M_split_m1 -m 1
treemix -i wNA_Home_30_9_20_M_split.tmix.gz -o wNA_Home_30_9_20_M_split_m2 -m 2
treemix -i wNA_Home_30_9_20_M_split.tmix.gz -o wNA_Home_30_9_20_M_split_m3 -m 3
treemix -i wNA_Home_30_9_20_M_split.tmix.gz -o wNA_Home_30_9_20_M_split_m4 -m 4
#visulize in R
source("./treemix-1.13-hd7c151e_1/bin/plotting_funcs.R")
plot_tree("AUS_Home_30_9_20_M_split_m0 ")
plot_tree("AUS_Home_30_9_20_M_split_m1")
plot_tree("AUS_Home_30_9_20_M_split_m2")
plot_tree("AUS_Home_30_9_20_M_split_m3")
plot_tree("AUS_Home_30_9_20_M_split_m4")

plot_tree("wNA_Home_30_9_20_M_split_m0")
plot_tree("wNA_Home_30_9_20_M_split_m1")
plot_tree("wNA_Home_30_9_20_M_split_m2")
plot_tree("wNA_Home_30_9_20_M_split_m3")
plot_tree("wNA_Home_30_9_20_M_split_m4")


#within wNA and AUS seperate, individuals grouped according to Admixture species
threepop -i AUS_SE_admixture.tmix.gz -k 1
threepop -i wNA_SE_admixture.tmix.gz -k 1
